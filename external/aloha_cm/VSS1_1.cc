// This File is Automatically generated by ALOHA
// The process calculated in this file is:
// P(1,2) - P(1,3)
//
#include "VSS1_1.h"

void VSS1_1(std::complex<double> S2[], std::complex<double> S3[],
            std::complex<double> COUP, std::complex<double> M1,
            std::complex<double> V1[]) {
    std::complex<double> cI = std::complex<double>(0., 1.);
    std::complex<double> TMP12;
    std::complex<double> TMP11;
    double P1[4];
    double P2[4];
    double P3[4];
    std::complex<double> OM1;
    std::complex<double> denom;
    OM1 = 0.;
    if (M1 != 0.)
        OM1 = 1. / pow(M1, 2);
    P2[0] = S2[0].real();
    P2[1] = S2[1].real();
    P2[2] = S2[1].imag();
    P2[3] = S2[0].imag();
    P3[0] = S3[0].real();
    P3[1] = S3[1].real();
    P3[2] = S3[1].imag();
    P3[3] = S3[0].imag();
    V1[0] = +S2[0] + S3[0];
    V1[1] = +S2[1] + S3[1];
    P1[0] = -V1[0].real();
    P1[1] = -V1[1].real();
    P1[2] = -V1[1].imag();
    P1[3] = -V1[0].imag();
    TMP11 = (P1[0] * P2[0] - P1[1] * P2[1] - P1[2] * P2[2] - P1[3] * P2[3]);
    TMP12 = (P1[0] * P3[0] - P1[1] * P3[1] - P1[2] * P3[2] - P1[3] * P3[3]);
    denom = COUP / (pow(P1[0], 2) - pow(P1[1], 2) - pow(P1[2], 2) -
                    pow(P1[3], 2) - pow(M1, 2));
    V1[2] =
        denom * S2[2] * S3[2] * (OM1 * P1[0] * (-cI * (TMP12) + cI * (TMP11)) +
                                 (-cI * (P2[0]) + cI * (P3[0])));
    V1[3] =
        denom * S2[2] * S3[2] * (OM1 * P1[1] * (-cI * (TMP12) + cI * (TMP11)) +
                                 (-cI * (P2[1]) + cI * (P3[1])));
    V1[4] =
        denom * S2[2] * S3[2] * (OM1 * P1[2] * (-cI * (TMP12) + cI * (TMP11)) +
                                 (-cI * (P2[2]) + cI * (P3[2])));
    V1[5] =
        denom * S2[2] * S3[2] * (OM1 * P1[3] * (-cI * (TMP12) + cI * (TMP11)) +
                                 (-cI * (P2[3]) + cI * (P3[3])));
}
