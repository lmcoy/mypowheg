// This File is Automatically generated by ALOHA
// The process calculated in this file is:
// Metric(1,4)*Metric(2,3) - Metric(1,2)*Metric(3,4)
//
#include "VVVV3_1.h"

void VVVV3_1(std::complex<double> V2[], std::complex<double> V3[],
             std::complex<double> V4[], std::complex<double> COUP,
             std::complex<double> M1, std::complex<double> V1[]) {
    std::complex<double> cI = std::complex<double>(0., 1.);
    std::complex<double> OM1;
    double P1[4];
    std::complex<double> TMP23;
    std::complex<double> denom;
    std::complex<double> TMP14;
    std::complex<double> TMP27;
    std::complex<double> TMP19;
    OM1 = 0.;
    if (M1 != 0.)
        OM1 = 1. / pow(M1, 2);
    V1[0] = +V2[0] + V3[0] + V4[0];
    V1[1] = +V2[1] + V3[1] + V4[1];
    P1[0] = -V1[0].real();
    P1[1] = -V1[1].real();
    P1[2] = -V1[1].imag();
    P1[3] = -V1[0].imag();
    TMP14 = (P1[0] * V2[2] - P1[1] * V2[3] - P1[2] * V2[4] - P1[3] * V2[5]);
    TMP27 = (V3[2] * V4[2] - V3[3] * V4[3] - V3[4] * V4[4] - V3[5] * V4[5]);
    TMP19 = (V3[2] * V2[2] - V3[3] * V2[3] - V3[4] * V2[4] - V3[5] * V2[5]);
    TMP23 = (P1[0] * V4[2] - P1[1] * V4[3] - P1[2] * V4[4] - P1[3] * V4[5]);
    denom = COUP / (pow(P1[0], 2) - pow(P1[1], 2) - pow(P1[2], 2) -
                    pow(P1[3], 2) - pow(M1, 2));
    V1[2] =
        denom * (OM1 * P1[0] * (-cI * (TMP14 * TMP27) + cI * (TMP19 * TMP23)) +
                 (-cI * (TMP19 * V4[2]) + cI * (V2[2] * TMP27)));
    V1[3] =
        denom * (OM1 * P1[1] * (-cI * (TMP14 * TMP27) + cI * (TMP19 * TMP23)) +
                 (-cI * (TMP19 * V4[3]) + cI * (V2[3] * TMP27)));
    V1[4] =
        denom * (OM1 * P1[2] * (-cI * (TMP14 * TMP27) + cI * (TMP19 * TMP23)) +
                 (-cI * (TMP19 * V4[4]) + cI * (V2[4] * TMP27)));
    V1[5] =
        denom * (OM1 * P1[3] * (-cI * (TMP14 * TMP27) + cI * (TMP19 * TMP23)) +
                 (-cI * (TMP19 * V4[5]) + cI * (V2[5] * TMP27)));
}
