// This File is Automatically generated by ALOHA
// The process calculated in this file is:
// Gamma(3,2,-1)*ProjM(-1,1)
//
#include "FFV2_2.h"
#include "aloha_pow2.h"

void FFV2_2(std::complex<double> F1[], std::complex<double> V3[],
            std::complex<double> COUP, std::complex<double> M2,
            std::complex<double> F2[]) {
    std::complex<double> cI = std::complex<double>(0., 1.);
    double P2[4];
    std::complex<double> denom;
    F2[0] = +F1[0] + V3[0];
    F2[1] = +F1[1] + V3[1];
    P2[0] = -F2[0].real();
    P2[1] = -F2[1].real();
    P2[2] = -F2[1].imag();
    P2[3] = -F2[0].imag();
    denom = COUP /
            (pow2(P2[0]) - pow2(P2[1]) - pow2(P2[2]) - pow2(P2[3]) - pow2(M2));
    F2[2] = denom * cI * (F1[2] * (P2[0] * (V3[2] + V3[5]) +
                                   (P2[1] * -1. * (V3[3] + cI * (V3[4])) +
                                    (P2[2] * (+cI * (V3[3]) - V3[4]) -
                                     P2[3] * (V3[2] + V3[5])))) +
                          F1[3] * (P2[0] * (V3[3] - cI * (V3[4])) +
                                   (P2[1] * (V3[5] - V3[2]) +
                                    (P2[2] * (-cI * (V3[5]) + cI * (V3[2])) +
                                     P2[3] * (+cI * (V3[4]) - V3[3])))));
    F2[3] = denom * cI * (F1[2] * (P2[0] * (V3[3] + cI * (V3[4])) +
                                   (P2[1] * -1. * (V3[2] + V3[5]) +
                                    (P2[2] * -1. * (+cI * (V3[2] + V3[5])) +
                                     P2[3] * (V3[3] + cI * (V3[4]))))) +
                          F1[3] * (P2[0] * (V3[2] - V3[5]) +
                                   (P2[1] * (+cI * (V3[4]) - V3[3]) +
                                    (P2[2] * -1. * (V3[4] + cI * (V3[3])) +
                                     P2[3] * (V3[2] - V3[5])))));
    F2[4] = denom * -cI * M2 *
            (F1[2] * -1. * (V3[2] + V3[5]) + F1[3] * (+cI * (V3[4]) - V3[3]));
    F2[5] = denom * cI * M2 *
            (F1[2] * (V3[3] + cI * (V3[4])) + F1[3] * (V3[2] - V3[5]));
}
